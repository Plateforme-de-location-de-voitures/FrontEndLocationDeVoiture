{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  // construteur\n  constructor(http) {\n    this.http = http;\n    // declaration de la route de connexion\n    this.apiUrl = 'http://localhost:8000/api/';\n  }\n  // Récupérer la liste des rôles\n  getRolesList() {\n    return this.http.get(this.apiUrl + 'roles');\n  }\n  // Récupérer les détails d'un rôle en utilisant l'id\n  getRoleDetail(roleId) {\n    return this.http.get(this.apiUrl + 'role/' + roleId);\n  }\n  // Enregistrement d'un nouvel utilisateur\n  registerUser(userData) {\n    return this.http.post(this.apiUrl + 'register', userData);\n  }\n  // Connexion de l'utilisateur\n  loginUser(userData) {\n    return this.http.post(this.apiUrl + 'login', userData);\n  }\n  // Récupérer les informations de l'utilisateur actuellement connecté\n  getCurrentUser() {\n    return this.http.get(this.apiUrl + 'user');\n  }\n  // Déconnexion de l'utilisateur\n  logoutUser() {\n    return this.http.post(this.apiUrl + 'logout', {});\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UsersService","constructor","http","apiUrl","getRolesList","get","getRoleDetail","roleId","registerUser","userData","post","loginUser","getCurrentUser","logoutUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\FrontEndLocationDeVoiture\\frontLocationVoiture_Components\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n   // construteur\n   constructor(private http: HttpClient) { }\n   // declaration de la route de connexion\n   private apiUrl = 'http://localhost:8000/api/';\n\n     // Récupérer la liste des rôles\n  getRolesList(): Observable<any> {\n    return this.http.get(this.apiUrl+'roles');\n  }\n\n  // Récupérer les détails d'un rôle en utilisant l'id\n  getRoleDetail(roleId: number): Observable<any> {\n    return this.http.get(this.apiUrl+'role/'+roleId);\n  }\n\n  // Enregistrement d'un nouvel utilisateur\n  registerUser(userData: any): Observable<any> {\n    return this.http.post(this.apiUrl+'register', userData);\n  }\n\n  // Connexion de l'utilisateur\n  loginUser(userData: any): Observable<any> {\n    return this.http.post(this.apiUrl+'login', userData);\n  }\n\n  // Récupérer les informations de l'utilisateur actuellement connecté\n  getCurrentUser(): Observable<any> {\n    return this.http.get(this.apiUrl+'user');\n  }\n\n  // Déconnexion de l'utilisateur\n  logoutUser(): Observable<any> {\n    return this.http.post(this.apiUrl+'logout', {});\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEtB;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB;IACQ,KAAAC,MAAM,GAAG,4BAA4B;EAFL;EAItC;EACHC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAC,OAAO,CAAC;EAC3C;EAEA;EACAG,aAAaA,CAACC,MAAc;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAC,OAAO,GAACI,MAAM,CAAC;EAClD;EAEA;EACAC,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,GAAC,UAAU,EAAEM,QAAQ,CAAC;EACzD;EAEA;EACAE,SAASA,CAACF,QAAa;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,GAAC,OAAO,EAAEM,QAAQ,CAAC;EACtD;EAEA;EACAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAC,MAAM,CAAC;EAC1C;EAEA;EACAU,UAAUA,CAAA;IACR,OAAO,IAAI,CAACX,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,GAAC,QAAQ,EAAE,EAAE,CAAC;EACjD;;AAnCWH,YAAY,C;mBAAZA,YAAY,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZjB,YAAY,C;SAAZA,YAAY;EAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}