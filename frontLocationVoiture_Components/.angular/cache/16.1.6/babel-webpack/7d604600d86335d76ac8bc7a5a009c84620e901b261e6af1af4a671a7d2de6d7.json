{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ModeleService {\n  // construteur\n  constructor(http) {\n    this.http = http;\n    // declaration de la route de connexion\n    this.apiUrl = 'http://localhost:8000/api/';\n  }\n  // Récupérer la liste des modèles\n  getModelesList() {\n    return this.http.get(this.apiUrl + 'modeles');\n  }\n  // Créer un nouveau modèle\n  createModele(modeleData) {\n    return this.http.post(this.apiUrl + 'modele/create', modeleData);\n  }\n  // Mettre à jour un modèle existant\n  updateModele(modeleId, modeleData) {\n    return this.http.put(this.apiUrl + 'modele/update/' + modeleId, modeleData);\n  }\n  // Supprimer un modèle en utilisant son ID\n  deleteModele(modeleId) {\n    return this.http.delete(this.apiUrl + 'modele/delete/' + modeleId);\n  }\n}\nModeleService.ɵfac = function ModeleService_Factory(t) {\n  return new (t || ModeleService)(i0.ɵɵinject(i1.HttpClient));\n};\nModeleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModeleService,\n  factory: ModeleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ModeleService","constructor","http","apiUrl","getModelesList","get","createModele","modeleData","post","updateModele","modeleId","put","deleteModele","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\FrontEndLocationDeVoiture\\frontLocationVoiture_Components\\src\\app\\services\\modele.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModeleService {\n\n  // construteur\n  constructor(private http: HttpClient) { }\n  // declaration de la route de connexion\n  private apiUrl = 'http://localhost:8000/api/';\n\n  // Récupérer la liste des modèles\n  getModelesList(): Observable<any> {\n    return this.http.get(this.apiUrl + 'modeles');\n  }\n\n  // Créer un nouveau modèle\n  createModele(modeleData: any): Observable<any> {\n    return this.http.post(this.apiUrl + 'modele/create', modeleData);\n  }\n\n  // Mettre à jour un modèle existant\n  updateModele(modeleId: number, modeleData: any): Observable<any> {\n    return this.http.put(this.apiUrl + 'modele/update/' + modeleId, modeleData);\n  }\n\n  // Supprimer un modèle en utilisant son ID\n  deleteModele(modeleId: number): Observable<any> {\n    return this.http.delete(this.apiUrl + 'modele/delete/' + modeleId);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAExB;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB;IACQ,KAAAC,MAAM,GAAG,4BAA4B;EAFL;EAIxC;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,SAAS,CAAC;EAC/C;EAEA;EACAG,YAAYA,CAACC,UAAe;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,MAAM,GAAG,eAAe,EAAEI,UAAU,CAAC;EAClE;EAEA;EACAE,YAAYA,CAACC,QAAgB,EAAEH,UAAe;IAC5C,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,MAAM,GAAG,gBAAgB,GAAGO,QAAQ,EAAEH,UAAU,CAAC;EAC7E;EAEA;EACAK,YAAYA,CAACF,QAAgB;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,IAAI,CAACV,MAAM,GAAG,gBAAgB,GAAGO,QAAQ,CAAC;EACpE;;AAzBWV,aAAa,C;mBAAbA,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbjB,aAAa,C;SAAbA,aAAa;EAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}