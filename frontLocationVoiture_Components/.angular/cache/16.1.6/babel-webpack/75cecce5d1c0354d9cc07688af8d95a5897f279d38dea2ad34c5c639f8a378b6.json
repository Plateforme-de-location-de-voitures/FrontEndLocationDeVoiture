{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ImageVoitureService {\n  // construteur\n  constructor(http) {\n    this.http = http;\n    // declaration de la route de connexion\n    this.apiUrl = 'http://localhost:8000/api/';\n  }\n  // Récupérer la liste d'images de voitures\n  getImageVoitureList() {\n    return this.http.get(this.apiUrl + 'images/voitures');\n  }\n  // Récupérer les images d'une voiture spécifique en utilisant l'id\n  getImagesParVoiture(voitureId) {\n    return this.http.get(this.apiUrl + 'images/voiture/' + voitureId);\n  }\n  // Créer une nouvelle image de voiture\n  createImageVoiture(imageData) {\n    return this.http.post(this.apiUrl + 'image/voiture/create', imageData);\n  }\n  // Récupérer les détails d'une image de voiture en utilisant l'id\n  getImageVoitureDetail(imageId) {\n    return this.http.get(this.apiUrl + 'image/voiture/' + imageId);\n  }\n  // Supprimer une image de voiture en utilisant l'id\n  deleteImageVoiture(imageId) {\n    return this.http.delete(this.apiUrl + 'image/voiture/delete/' + imageId);\n  }\n}\nImageVoitureService.ɵfac = function ImageVoitureService_Factory(t) {\n  return new (t || ImageVoitureService)(i0.ɵɵinject(i1.HttpClient));\n};\nImageVoitureService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageVoitureService,\n  factory: ImageVoitureService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ImageVoitureService","constructor","http","apiUrl","getImageVoitureList","get","getImagesParVoiture","voitureId","createImageVoiture","imageData","post","getImageVoitureDetail","imageId","deleteImageVoiture","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\FrontEndLocationDeVoiture\\frontLocationVoiture_Components\\src\\app\\services\\image-voiture.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageVoitureService {\n\n  // construteur\n  constructor(private http: HttpClient) { }\n  // declaration de la route de connexion\n  private apiUrl = 'http://localhost:8000/api/';\n\n  // Récupérer la liste d'images de voitures\n  getImageVoitureList(): Observable<any> {\n    return this.http.get(this.apiUrl + 'images/voitures');\n  }\n\n  // Récupérer les images d'une voiture spécifique en utilisant l'id\n  getImagesParVoiture(voitureId: number): Observable<any> {\n    return this.http.get(this.apiUrl + 'images/voiture/' + voitureId);\n  }\n\n  // Créer une nouvelle image de voiture\n  createImageVoiture(imageData: any): Observable<any> {\n    return this.http.post(this.apiUrl+'image/voiture/create', imageData);\n  }\n\n  // Récupérer les détails d'une image de voiture en utilisant l'id\n  getImageVoitureDetail(imageId: number): Observable<any> {\n    return this.http.get(this.apiUrl+'image/voiture/'+imageId);\n  }\n\n  // Supprimer une image de voiture en utilisant l'id\n  deleteImageVoiture(imageId: number): Observable<any> {\n    return this.http.delete(this.apiUrl+'image/voiture/delete/'+imageId);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAE9B;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB;IACQ,KAAAC,MAAM,GAAG,4BAA4B;EAFL;EAIxC;EACAC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,iBAAiB,CAAC;EACvD;EAEA;EACAG,mBAAmBA,CAACC,SAAiB;IACnC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,iBAAiB,GAAGI,SAAS,CAAC;EACnE;EAEA;EACAC,kBAAkBA,CAACC,SAAc;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,GAAC,sBAAsB,EAAEM,SAAS,CAAC;EACtE;EAEA;EACAE,qBAAqBA,CAACC,OAAe;IACnC,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAC,gBAAgB,GAACS,OAAO,CAAC;EAC5D;EAEA;EACAC,kBAAkBA,CAACD,OAAe;IAChC,OAAO,IAAI,CAACV,IAAI,CAACY,MAAM,CAAC,IAAI,CAACX,MAAM,GAAC,uBAAuB,GAACS,OAAO,CAAC;EACtE;;AA9BWZ,mBAAmB,C;mBAAnBA,mBAAmB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBlB,mBAAmB,C;SAAnBA,mBAAmB;EAAAmB,OAAA,EAAnBnB,mBAAmB,CAAAoB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}