{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MarqueService {\n  // construteur\n  constructor(http) {\n    this.http = http;\n    // declaration de la route de connexion\n    this.apiUrl = 'http://localhost:8000/api/';\n  }\n  // Récupérer la liste des marques\n  getMarquesList() {\n    return this.http.get(this.apiUrl + 'marques');\n  }\n  // Créer une nouvelle marque\n  createMarque(marqueData) {\n    return this.http.post(this.apiUrl + 'marque/create', marqueData);\n  }\n  // Mettre à jour une marque existante\n  updateMarque(marqueId, marqueData) {\n    return this.http.put(this.apiUrl + 'marque/update/' + marqueId, marqueData);\n  }\n  // Supprimer une marque en utilisant l'id\n  deleteMarque(marqueId) {\n    return this.http.delete(this.apiUrl + 'marque/delete/' + marqueId);\n  }\n}\nMarqueService.ɵfac = function MarqueService_Factory(t) {\n  return new (t || MarqueService)(i0.ɵɵinject(i1.HttpClient));\n};\nMarqueService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MarqueService,\n  factory: MarqueService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MarqueService","constructor","http","apiUrl","getMarquesList","get","createMarque","marqueData","post","updateMarque","marqueId","put","deleteMarque","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\FrontEndLocationDeVoiture\\frontLocationVoiture_Components\\src\\app\\services\\marque.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarqueService {\n\n  // construteur\n  constructor(private http: HttpClient) { }\n  // declaration de la route de connexion\n  private apiUrl = 'http://localhost:8000/api/';\n\n  // Récupérer la liste des marques\n  getMarquesList(): Observable<any> {\n    return this.http.get(this.apiUrl + 'marques');\n  }\n\n  // Créer une nouvelle marque\n  createMarque(marqueData: any): Observable<any> {\n    return this.http.post(this.apiUrl + 'marque/create', marqueData);\n  }\n\n  // Mettre à jour une marque existante\n  updateMarque(marqueId: number, marqueData: any): Observable<any> {\n    return this.http.put(this.apiUrl + 'marque/update/' + marqueId, marqueData);\n  }\n\n  // Supprimer une marque en utilisant l'id\n  deleteMarque(marqueId: number): Observable<any> {\n    return this.http.delete(this.apiUrl + 'marque/delete/' + marqueId);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAExB;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB;IACQ,KAAAC,MAAM,GAAG,4BAA4B;EAFL;EAIxC;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,SAAS,CAAC;EAC/C;EAEA;EACAG,YAAYA,CAACC,UAAe;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,MAAM,GAAG,eAAe,EAAEI,UAAU,CAAC;EAClE;EAEA;EACAE,YAAYA,CAACC,QAAgB,EAAEH,UAAe;IAC5C,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,MAAM,GAAG,gBAAgB,GAAGO,QAAQ,EAAEH,UAAU,CAAC;EAC7E;EAEA;EACAK,YAAYA,CAACF,QAAgB;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,IAAI,CAACV,MAAM,GAAG,gBAAgB,GAAGO,QAAQ,CAAC;EACpE;;AAzBWV,aAAa,C;mBAAbA,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbjB,aAAa,C;SAAbA,aAAa;EAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}