{"ast":null,"code":"import { Voiture } from 'src/app/models/voiture'; // Importez le modèle de voiture\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app//services/voiture.service\";\nexport class CreationVoitureComponent {\n  constructor(voitureService) {\n    this.voitureService = voitureService;\n    this.voitureData = new Voiture(); // Déclarez une instance de la classe Voiture pour stocker les données du formulaire\n    this.isCreationSuccessful = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {}\n  // Méthode appelée lors de la soumission du formulaire\n  creerVoiture() {\n    // Appelez la méthode createVoiture du service pour enregistrer la nouvelle voiture\n    this.voitureService.createVoiture(this.voitureData).subscribe(response => {\n      this.isCreationSuccessful = true;\n      this.errorMessage = '';\n      // Réinitialiser les données de la voiture après la création réussie\n      this.voitureData = new Voiture();\n    }, error => {\n      this.isCreationSuccessful = false;\n      this.errorMessage = 'Erreur lors de la création de la voiture.';\n      console.error(error);\n    });\n  }\n}\nCreationVoitureComponent.ɵfac = function CreationVoitureComponent_Factory(t) {\n  return new (t || CreationVoitureComponent)(i0.ɵɵdirectiveInject(i1.VoitureService));\n};\nCreationVoitureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreationVoitureComponent,\n  selectors: [[\"app-creation-voiture\"]],\n  decls: 2,\n  vars: 0,\n  template: function CreationVoitureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"creation-voiture works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Voiture","CreationVoitureComponent","constructor","voitureService","voitureData","isCreationSuccessful","errorMessage","ngOnInit","creerVoiture","createVoiture","subscribe","response","error","console","i0","ɵɵdirectiveInject","i1","VoitureService","selectors","decls","vars","template","CreationVoitureComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\FrontEndLocationDeVoiture\\frontLocationVoiture_Components\\src\\app\\components\\voiture\\creation-voiture\\creation-voiture.component.ts","D:\\FrontEndLocationDeVoiture\\frontLocationVoiture_Components\\src\\app\\components\\voiture\\creation-voiture\\creation-voiture.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Voiture } from 'src/app/models/voiture'; // Importez le modèle de voiture\nimport { VoitureService } from 'src/app//services/voiture.service';// Importez le service de voiture\n\n\n@Component({\n  selector: 'app-creation-voiture',\n  templateUrl: './creation-voiture.component.html',\n  styleUrls: ['./creation-voiture.component.css']\n})\nexport class CreationVoitureComponent {\n  voitureData: Voiture = new Voiture();// Déclarez une instance de la classe Voiture pour stocker les données du formulaire\n  isCreationSuccessful: boolean = false;\n  errorMessage: string = '';\n\n  constructor(private voitureService: VoitureService) { }\n\n  ngOnInit(): void {\n  }\n\n  // Méthode appelée lors de la soumission du formulaire\n  creerVoiture() {\n    // Appelez la méthode createVoiture du service pour enregistrer la nouvelle voiture\n    this.voitureService.createVoiture(this.voitureData).subscribe(\n      response => {\n        this.isCreationSuccessful = true;\n        this.errorMessage = '';\n        // Réinitialiser les données de la voiture après la création réussie\n        this.voitureData = new Voiture();\n      },\n      error => {\n        this.isCreationSuccessful = false;\n        this.errorMessage = 'Erreur lors de la création de la voiture.';\n        console.error(error);\n      }\n    );\n  }\n}\n","<p>creation-voiture works!</p>\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,wBAAwB,CAAC,CAAC;;;AASlD,OAAM,MAAOC,wBAAwB;EAKnCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAJlC,KAAAC,WAAW,GAAY,IAAIJ,OAAO,EAAE,CAAC;IACrC,KAAAK,oBAAoB,GAAY,KAAK;IACrC,KAAAC,YAAY,GAAW,EAAE;EAE6B;EAEtDC,QAAQA,CAAA,GACR;EAEA;EACAC,YAAYA,CAAA;IACV;IACA,IAAI,CAACL,cAAc,CAACM,aAAa,CAAC,IAAI,CAACL,WAAW,CAAC,CAACM,SAAS,CAC3DC,QAAQ,IAAG;MACT,IAAI,CAACN,oBAAoB,GAAG,IAAI;MAChC,IAAI,CAACC,YAAY,GAAG,EAAE;MACtB;MACA,IAAI,CAACF,WAAW,GAAG,IAAIJ,OAAO,EAAE;IAClC,CAAC,EACDY,KAAK,IAAG;MACN,IAAI,CAACP,oBAAoB,GAAG,KAAK;MACjC,IAAI,CAACC,YAAY,GAAG,2CAA2C;MAC/DO,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;AA1BWX,wBAAwB,C;mBAAxBA,wBAAwB,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAxBhB,wBAAwB,C;QAAxBA,wBAAwB;EAAAiB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVrCT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,8BAAuB;MAAAZ,EAAA,CAAAa,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}